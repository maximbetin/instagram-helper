name: Release Pipeline

# Trigger when a push is made to the main branch
on:
  push:
    branches: [main]
    # Only run if the changes are in the following files
    paths:
      - "**.py"
      - ".github/workflows/**"
      - "pyproject.toml"
      - "templates/**"

# Allow only one job to run at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Lint, Test, Build, Version, and Release the application
jobs:
  test-build-release:
    runs-on: windows-latest
    permissions:
      contents: write
    defaults:
      run:
        shell: pwsh
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Setup Python environment
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          # Cache pip packages
          cache: pip

      # Install dependencies
      - name: Install
        run: |
          python -m pip install -U pip
          pip install -e ".[dev]" pyinstaller
          playwright install

      # Lint and type-check the code
      - name: Lint
        run: |
          ruff check . --fix
          mypy .

      # Run tests with coverage
      - name: Test
        run: |
          python -m pytest tests/ -v --cov=. --cov-report=xml --cov-report=term-missing

      # Upload coverage to Codecov
      - name: Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false

      # Build the application
      - name: Build
        run: |
          pyinstaller --onefile --windowed run.py --name instagram-helper
          Compress-Archive -Path dist\instagram-helper.exe -DestinationPath dist\instagram-helper.zip

      # Determine version
      - name: Version
        id: ver
        run: |
          $v = "v$(Get-Date -Format 'yyyy.MM.dd')-${{ github.run_number }}"
          echo "version=$v" >> $env:GITHUB_OUTPUT

      # Create GitHub Release
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.version }}
          name: Release ${{ steps.ver.outputs.version }}
          body: |
            Automated release from ${{ github.sha }}
            ${{ github.event.head_commit.message }}
          files: dist/instagram-helper.zip
        # Set the GitHub token to create the release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
